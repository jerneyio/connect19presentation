<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<flow name="backupFlow" doc:id="bae9b210-30df-48b1-81a3-50633cf68502" >
		<logger level="INFO" doc:name="README" doc:id="996ba0f0-6214-48d2-8e72-cbce700d2c91" message="THIS FLOW IS A CONTAINER FOR REFACTORING ITERATIONS, IT SHOULD NOT BE TRIGGERED"/>
		<ee:transform doc:name="Set Payload to get rid of meta-data prop errors" doc:id="2beecd5a-8554-49e3-9275-02d010d7c041">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
[
 {
   "Account": "ms3",
   "Type": "Credit",
   "Amount": 100,
   "Date": "5/30/2019"
 },
 {
   "Account": "ms3",
   "Type": "Credit",
   "Amount": 325,
   "Date": "6/15/2019"
 },
 {
   "Account": "MuleSoft",
   "Type": "Debit",
   "Amount": 725,
   "Date": "4/29/2019"
 },
 {
   "Account": "MuleSoft",
   "Type": "Credit",
   "Amount": 1000,
   "Date": "5/16/2019"
 },
 {
   "Account": "jerney.io",
   "Type": "Debit",
   "Amount": 250,
   "Date": "5/30/2019"
 },
 {
   "Account": "ms3",
   "Type": "Debit",
   "Amount": 125,
   "Date": "5/16/2019"
 },
 {
   "Account": "MuleSoft",
   "Type": "Credit",
   "Amount": 875,
   "Date": "5/16/2019"
 },
 {
   "Account": "ms3",
   "Type": "Credit",
   "Amount": 950,
   "Date": "6/15/2019"
 },
 {
   "Account": "ms3",
   "Type": "Credit",
   "Amount": 450,
   "Date": "3/18/2019"
 },
 {
   "Account": "jerney.io",
   "Type": "Credit",
   "Amount": 400,
   "Date": "5/30/2019"
 },
 {
   "Account": "MuleSoft",
   "Type": "Debit",
   "Amount": 1250,
   "Date": "4/15/2019"
 },
 {
   "Account": "ms3",
   "Type": "Debit",
   "Amount": 250,
   "Date": "3/18/2019"
 },
 {
   "Account": "jerney.io",
   "Type": "Credit",
   "Amount": 225,
   "Date": "5/16/2019"
 },
 {
   "Account": "jerney.io",
   "Type": "Debit",
   "Amount": 775,
   "Date": "5/16/2019"
 },
 {
   "Account": "ms3",
   "Type": "Credit",
   "Amount": 500,
   "Date": "5/30/2019"
 },
 {
   "Account": "MuleSoft",
   "Type": "Credit",
   "Amount": 150,
   "Date": "5/16/2019"
 },
 {
   "Account": "MuleSoft",
   "Type": "Credit",
   "Amount": 475,
   "Date": "5/16/2019"
 },
 {
   "Account": "ms3",
   "Type": "Debit",
   "Amount": 800,
   "Date": "6/29/2019"
 },
 {
   "Account": "jerney.io",
   "Type": "Debit",
   "Amount": 50,
   "Date": "5/16/2019"
 },
 {
   "Account": "ms3",
   "Type": "Debit",
   "Amount": 1500,
   "Date": "4/1/2019"
 },
 {
   "Account": "jerney.io",
   "Type": "Credit",
   "Amount": 750,
   "Date": "5/16/2019"
 },
 {
   "Account": "jerney.io",
   "Type": "Credit",
   "Amount": 250,
   "Date": "4/1/2019"
 },
 {
   "Account": "MuleSoft",
   "Type": "Debit",
   "Amount": 100,
   "Date": "5/16/2019"
 },
 {
   "Account": "ms3",
   "Type": "Debit",
   "Amount": 350,
   "Date": "4/29/2019"
 },
 {
   "Account": "MuleSoft",
   "Type": "Credit",
   "Amount": 250,
   "Date": "5/16/2019"
 }
]]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<scatter-gather doc:name="Scatter-Gather" doc:id="c6b642ac-9b8c-4a74-88f0-2949d9a18024" >
			<route >
				<ee:transform doc:name="Original" doc:id="61604e1b-e63a-4cbe-96ab-81cdbf57b469">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
(payload groupBy $.Account) mapObject (account, accountName) -> {
	(accountName): account reduce (accountItem, total=0) ->
		accountItem.Type match {
			case "Credit" -> if ((accountItem.Date as Date {format: "M/d/yyyy"}) < now())
							   total - accountItem.Amount * 1.1
							 else
							   total - accountItem.Amount
		    case "Debit" -> if ((accountItem.Date as Date {format: "M/d/yyyy"}) < now())
							   total + accountItem.Amount * 1.1
							 else
							   total + accountItem.Amount
		}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</route>
			<route >
				<ee:transform doc:name="Refactor 1" doc:id="26621039-20c6-4fc5-a273-2d172c264d79">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/java

var accounts = payload groupBy $.Account
---
accounts mapObject (account, accountName) -> {
	(accountName): account reduce (accountItem, total=0) -> do {
		var date   = accountItem.Date as Date {format: "M/d/yyyy"}
		var amount = if (date < now()) accountItem.Amount * 1.1 else accountItem.Amount
		---
		accountItem.Type match {
			case "Credit" -> total - amount
		    case "Debit"  -> total + amount
		}
	}
		
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</route>
			<route >
				<ee:transform doc:name="Refactor 2" doc:id="a7204e33-71e0-4f28-877b-c6ed38913148">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/java

var accounts = payload groupBy $.Account

fun calculateTotal(account) =
	account reduce (accountItem, total=0) -> do {
		var date   = accountItem.Date as Date {format: "M/d/yyyy"}
		var amount = if (date < now()) accountItem.Amount * 1.1 else accountItem.Amount
		---
		accountItem.Type match {
			case "Credit" -> total - amount
		    case "Debit"  -> total + amount
		}
	}
---
accounts mapObject (account, accountName) -> {
	(accountName): calculateTotal(account)
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</route>
			<route >
				<ee:transform doc:name="Final" doc:id="ecd1da7e-0885-48d8-8528-b64b23ec71c8">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/java

var accounts = payload groupBy $.Account

fun calculateTotal(account) = do {
	var today = now()
	---
	account reduce (accountItem, total=0) -> do {
		var date   = accountItem.Date as Date {format: "M/d/yyyy"}
		var amount = if (date < today) accountItem.Amount * 1.1 else accountItem.Amount
		---
		accountItem.Type match {
			case "Credit" -> total - amount
		    case "Debit"  -> total + amount
		}
	}
}
---
accounts mapObject (account, accountName) -> {
	(accountName): calculateTotal(account)
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</route>
		</scatter-gather>
	</flow>
</mule>
